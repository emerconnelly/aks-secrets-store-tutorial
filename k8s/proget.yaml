# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proget-deployment
  namespace: demo-web-app
  labels:
    app.kubernetes.io/name: proget
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: proget
      app.kubernetes.io/managed-by: flux
  template:
    metadata:
      namespace: demo-web-app
      labels:
        app.kubernetes.io/name: proget
        app.kubernetes.io/managed-by: flux
    spec:
      containers:
      - name: proget
        image: proget.inedo.com/productimages/inedo/proget:23.0.28
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: ASPNETCORE_URLS
          value: http://*:80
        - name: PROGET_SQL_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: sql-connection-string
              key: PROGET_SQL_CONNECTION_STRING
        resources:
          limits:
            cpu: '1'
            memory: 1000Mi
          requests:
            cpu: 200m
            memory: 300Mi
        volumeMounts:
        - name: demo-web-app  # the name of the volume
          mountPath: /mnt/secrets-store # arbitrary path to mount the secrets
          readOnly: true
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - proget
                topologyKey: kubernetes.io/hostname
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: secrets-store # the name of the volume
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: demo-web-app # the name of the SecretProviderClass
---
# service
apiVersion: v1
kind: Service
metadata:
  name: proget
  namespace: demo-web-app
  labels:
    app.kubernetes.io/managed-by: flux
    app.kubernetes.io/name: proget
spec:
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app.kubernetes.io/name: proget
---
# ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proget
  namespace: demo-web-app
  labels:
    app.kubernetes.io/managed-by: flux
    app.kubernetes.io/name: proget
spec:
  ingressClassName: azure-application-gateway
  rules:
  - http:
      paths:
      - path: /
        backend:
          service:
            name: proget
            port:
              number: 80
        pathType: Exact
